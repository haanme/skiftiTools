% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Skifti_view.R
\name{save_skeleton}
\alias{save_skeleton}
\title{Create png from mask and data in Nifti format}
\usage{
save_skeleton(
  mask,
  data,
  img_hdr,
  output,
  legend_title,
  scale,
  keep_temp = FALSE,
  palette = "lajolla",
  verbose = FALSE
)
}
\arguments{
\item{mask}{Intensity data in Nifti object format}

\item{data}{Skeleton at same imaging space as the data, in Nifti format}

\item{img_hdr}{Nifti header object}

\item{output}{Output PNG filename}

\item{legend_title}{Title to be shown}

\item{scale}{scaling for intensity values, tune for better color depth}

\item{keep_temp}{TRUE/FALSE(default) to keep temporary png images}

\item{palette}{color palette}

\item{verbose}{TRUE/FALSE(default), for verbosity}
}
\value{
No output, as resuts are saved to a png file
}
\description{
Skeleton mask and corresponding image intensity data must be in Nifti format.
The skeleton mask is used to determine the coordinates of intensity data.
}
\examples{
library(e1071)
library(RNifti)

data<-array(0,dim=list(10,10,10,10))
for(t in 1:10) {
  for(x in 1:10) {
    for(y in 1:10) {
      for(z in 1:10) {
        data[x,y,z,t]<-x+y+z
      }
    }
  }
}
data_Nifti<-RNifti::retrieveNifti(data)
RNifti::writeNifti(data_Nifti, "data_Nifti.nii.gz", template = NULL, datatype = "auto")
data_skeleton<-array(0,dim=list(10,10,10))
for(x in 1:10) {
  for(y in 1:10) {
    for(z in 1:10) {
      if(((x-5)^2 < 3) & ((y-5)^2 < 3) & ((z-5)^2 < 3)) {
        data_skeleton[x,y,z]<-1
      }
    }
  }
}
data_skeleton_Nifti<-RNifti::retrieveNifti(data_skeleton)
RNifti::writeNifti(data_skeleton_Nifti, "data_skeleton_Nifti.nii.gz", template = NULL, datatype = "auto")

imgs<-list()
basedir<-paste('.', 'out', 'FA', 'skeleton', sep='/')
maskfile<-paste('.', 'data_skeleton_Nifti.nii.gz', sep='/')
names<-dir(basedir)
# Write data to Skifti
for(i in 1:3) {
  # Convert Nifti to skifti
  sk<-Nifti2Skifti("data_Nifti.nii.gz", maskfile)
  sk$datatype<-"binary"
  filename<-writeSkifti(sk, paste("example_", i, sep=''), overwrite = TRUE)
}
# Calculate 1st order statistics
data_all<-NULL
for(i in 1:3) {
  data<-readRDS(paste("example_", i, ".rDs", sep=''))
  if(is.null(data_all)){
    data_all<-data$data
  } else {
    data_all<-rbind(data_all, data$data)
  }
}
data_all<-data.frame(data_all)
data_mean<-sapply(data_all, function(x) mean(x))

# Write statistics into a file
mask<-RNifti::readNifti(maskfile, internal = FALSE, volumes = NULL)
img_hdr<-niftiHeader(mask)

# Re-create Nifti
m<-array(mask)
a<-m
a[mask>0]<-data_mean
dim(a)<-img_hdr$dim[2:4]
dim(mask)<-img_hdr$dim[2:4]
save_skeleton(mask, a, img_hdr, "example_mean.png", "FA mean", 100)
}
